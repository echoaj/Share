- name: Read inputs.conf
  ansible.builtin.slurp:
    src: 'C:\Program Files\SplunkUniversalForwarder\etc\system\local\inputs.conf'
  register: inputs_b64

- name: Decode inputs.conf
  ansible.builtin.set_fact:
    inputs_text: "{{ inputs_b64.content | b64decode }}"

# Count stanzas like [WinEventLog://Security] whose block contains an
# UNcommented line: disabled = 0  OR  disabled = false
# - Ignores lines starting with '#' (even with leading spaces)
# - Handles arbitrary whitespace around '='
# - Anchors the search within each WinEventLog block (up to next '[')
- name: Find ENABLED WinEventLog stanzas
  ansible.builtin.set_fact:
    enabled_matches: >-
      {{ inputs_text |
         regex_findall('(?mis)^\\s*\\[WinEventLog://([^\\]]+)\\][^\\[]*?^\\s*(?!#)\\s*disabled\\s*=\\s*(?:0|false)\\s*$', multiline=True) }}

- name: Debug which stanzas are enabled
  ansible.builtin.debug:
    msg: "Enabled stanzas: {{ enabled_matches }}"
  when: enabled_matches | length > 0

- name: Fail if NO WinEventLog stanzas are enabled
  ansible.builtin.fail:
    msg: "No WinEventLog stanza in inputs.conf has an enabled (disabled=0/false) setting."
  when: enabled_matches | length == 0