I have a gitlab pipeline that consists of an a .gitlab.ci.yml, which runs "ansible-playbook -i inventory playbook.yml"
In the playbook I have:
[windows]
192.168.5.45       

[windows:vars]
ansible_user = Admin...
ansible_password = Pass...
ansible_connection = winrm
ansible_winrm_port = 5986
ansible_winrm_transport = basic
become_user = Administrator
become_flags = "logon_type=interactive logon_flags=with_profile"
ansible_winrm_server_cert_validation = ignore
ansible_winrm_read_timeout_sec = 60

Then I have a playbook.yml with 
---
- name: Calling Windows Role
  hosts: windows
  gather_facts: true
  roles:
    - role : windows

Then within the windows folder I have a tasks folder with a few rolls.  one of them copies a powershell file and executes it on the target virtual machine defined in the playbook.

Every time I run the pipeline I need to edit the inventory file to change the ip address for the target machine.  
But what I want to do is, I want to define the IP address of that machine within the .gitlab-ci.yml file instead and have ansible use that IP address.  Is this possible?
Can that ip address define within the .gitlab-ci.yml be passed to the inventory file?
Do I even need an inventory file?
Do I need the playbook.yml?
What's the best solution to acheive this if possible?



So I added to the .gitlab-ci file this:
variables:
  WSUS_IP: '192.168.3.25'                               # Change

And in the job I am runnning ansible like this:
ansible-playbook playbook.yml --extra-vars "user=$DSO_SERVICE_ACCOUNT_USR pass=$DSO_SERVICE_ACCOUNT_PSW path=$EXPORT_PATH_WINDOWS ip=$WSUS_IP"

and modified playbook.yml to this:
---

- name: Calling Windows Role
  hosts: "{{ ip }}"
  gather_facts: true
  vars:
    ansible_user: Admin...
    ansible_password: Pass...
    ansible_connection: winrm
    ansible_winrm_port: 5985
    ansible_winrm_transport: basic
    become_user: Administrator
    become_flags: "logon_type=interactive logon_flags=with_profile"
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_read_timeout_sec: 60                                         
  roles:
    - role : windows


But it doesn't seem to work.  I get this result in the console
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'
[WARNING]: Could not match supplied host pattern, ignoring: 192.168.5.45
PLAY [Calling Windows Role] ****************************************************
skipping: no hosts matched
PLAY RECAP *********************************************************************

Am I doing something wrong?



#!/bin/bash
target_ip="192.168.3.25"

# List all VMs and iterate through them
for vm in $(govc ls /path/to/your/vm/folder); do
  # Get VM info in JSON format and extract the guest IP
  ip=$(govc vm.info -json "$vm" | jq -r '.VirtualMachines[0].Guest.IpAddress')
  if [ "$ip" = "$target_ip" ]; then
    echo "Found VM: $vm (IP: $ip)"
  fi
done

