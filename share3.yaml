# NOTE: The following GPOs must be set to success & failure
#       * Audit Logoff

# REQUIREMENT:
#       * Req11. The Windows Operating System Workstation shall generate an event log when a local user account successfully logs off.
# DESCRIPTION:
#       * This script creates a temporary user, logs into windows workstation as the user with valid credentials.
#       * Then the user logs off and the script checks if a logon event log was generated.

---

- tags: 
    - req11-SDSO-8165
    - SDSO-8165
  block:
    - name: Initialize result tracker
      ansible.builtin.include_tasks: "{{ common_tasks_dir }}/result/init.yaml"

    - name: Create a temporary user
      ansible.builtin.include_tasks: common/create-user.yaml
      vars:
        user_groups:
          - Users
        user_password: "{{ test_password }}"

     # Capture TIMESTAMP before triggering directory access failure
    - name: Capture timestamp before triggering event log
      ansible.windows.win_shell: '(Get-Date).ToString("o")'
      register: check_start                                     # Capture output of a task and store in a variable
      changed_when: false

    - name: Log in attempt for {{ test_username }}
      ansible.windows.win_shell: |
        try {
          $output = "Log in successfull."
        }
        catch {
          $output = "Log in fail."
        }
        $output
      vars:
        ansible_become: true
        ansible_become_method: runas
        ansible_become_user: '.\\{{ test_username }}'
        ansible_become_password: "{{ test_password }}"
        ansible_become_flags: "logon_type=interactive"
      register: identity
      ignore_errors: true

    - name: Display log in result
      ansible.builtin.debug:
        msg: "{{ identity.stdout_lines }}"
      ignore_errors: true
    
    - name: Log off the temporary user
      ansible.windows.win_shell: |
        logoff 

    # Query Event ID 4647 since Start Time (4634 too)
    - name: Query ID 4647 since start time
      ansible.windows.win_shell: |
        $Start = [datetime]::Parse('{{ check_start.stdout | trim }}')
        $events = Get-WinEvent -FilterHashtable @{ LogName='Security'; Id=4647; StartTime=$Start }
        $eventCount = $events.Count
        $eventResult = $null
        foreach ($evt in $events) {
          $message = $evt.FormatDescription().Split("`n")[0].Trim()
          $eventResult = [PSCustomObject]@{
            id          = $evt.Id
            found       = $true
            status      = 'PASS'
            timestamp   = $evt.TimeCreated.ToString("yyyy-MM-dd HH:mm:ss")
            audit       = ($evt.KeywordsDisplayNames -join ', ')
            logName     = $evt.LogName
            summary     = "Event ID 4647 ($message) FOUND out of $eventCount event(s)."
          }
          break
        }

        if ($null -eq $eventResult) {
          $eventResult = [PSCustomObject]@{
            id          = $null
            found       = $false
            status      = 'FAIL'
            timestamp   = $null
            audit       = $null
            logName     = $null
            summary     = "Event ID 4647 NOT FOUND out of $eventCount event(s)."
          }
        }
        $eventResult | ConvertTo-Json -Depth 5
      register: evt_check
      ignore_errors: true
      changed_when: false
      retries: 3
      delay: 2
      until: "(evt_check.stdout | from_json).found | default(false)"
      failed_when: false

    - name: Delete the temporary user
      ansible.builtin.include_tasks: common/delete-user.yaml

    # Convert stdout to JSON to get key value pairs
    - name: Parse event check result
      ansible.builtin.set_fact:
        audit_result: "{{ evt_check.stdout | from_json }}"

    - name: Show event summary
      ansible.builtin.debug:
        var: audit_result

    - name: Assert that Event ID 4647 was found
      ansible.builtin.assert:
        that:
          - audit_result.found
        success_msg: "Event ID 4647 found - continue normally"
        fail_msg: "Event ID 4647 not found - trigger rescue"
      changed_when: false

    - name: Record result as passed
      ansible.builtin.include_tasks: "{{ common_tasks_dir }}/result/pass.yaml"

  rescue:
    - name: Display error message
      ansible.builtin.debug:
        msg: "{{ ansible_failed_result }}"

  always:
    - name: Print check result
      ansible.builtin.include_tasks: "{{ common_tasks_dir }}/result/print.yaml"
      vars:
        requirement_text: "The Windows Operating System Workstation shall generate an event log when a local user account successfully logs off."
        jira_ticket: SDSO-8165


This is my ansible code above:

I am getting the following error.  WHY?



ASK [windows-workstation : Display log in result] ************************************************
ok: [192.168.5.11] => {
    "msg": [
        "Log in successfull."
    ]
}

TASK [windows-workstation : Log off the temporary user] *******************************************
fatal: [192.168.5.11]: FAILED! => {"changed": true, "cmd": "logoff", "delta": "0:00:00.265628", "end": "2025-08-25 17:44:25.428434", "msg": "non-zero return code", "rc": 1, "start": "2025-08-25 17:44:25.162806", "stderr": "Could not logoff current session ID, Error code 1\r\nError [1]:Incorrect function.", "stderr_lines": ["Could not logoff current session ID, Error code 1", "Error [1]:Incorrect function."], "stdout": "", "stdout_lines": []}

TASK [windows-workstation : Display error message] ************************************************
ok: [192.168.5.11] => {
    "msg": {
        "changed": true,
        "cmd": "logoff",
        "delta": "0:00:00.265628",
        "end": "2025-08-25 17:44:25.428434",
        "failed": true,
        "msg": "non-zero return code",
        "rc": 1,
        "start": "2025-08-25 17:44:25.162806",
        "stderr": "Could not logoff current session ID, Error code 1\r\nError [1]:Incorrect function.",
        "stderr_lines": [
            "Could not logoff current session ID, Error code 1",
            "Error [1]:Incorrect function."
        ],
        "stdout": "",
        "stdout_lines": []
    }
}

TASK [windows-workstation : Print check result] ***************************************************
included: /home/n29392/cs2/tasks/result/print.yaml for 192.168.5.11




